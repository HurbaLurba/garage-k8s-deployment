apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: garage-s3-api
  namespace: garage-storage
  labels:
    app: garage-s3
  annotations:
    # Performance optimizations - tested to improve throughput by 14%
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
    nginx.ingress.kubernetes.io/client-max-body-size: "5g"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-body-size: "5g"
    
    # CORS configuration for S3 API compatibility
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, PUT, POST, DELETE, HEAD, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,x-amz-content-sha256,x-amz-date,x-amz-security-token"
    nginx.ingress.kubernetes.io/cors-expose-headers: "ETag,x-amz-request-id,x-amz-id-2"
    
    # SSL/TLS configuration - replace with your cert-manager issuer
    # cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  # Uncomment and configure TLS if using cert-manager
  # tls:
  # - hosts:
  #   - s3.storage-nas.example.com
  #   secretName: garage-s3-api-tls
  rules:
  - host: s3.storage-nas.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: garage-s3-service
            port:
              number: 3900
